mdp

//  6 | .... ..
//  5 |    . ..
//  4 | .... .
//  3 |   t  .
//  2 | ........t
//  1 | . . .   .
//  0 | i .t. ......
//    --------------
//      ............

formula up = (x=0&y=0)|(x=2&y=0)|(x=4&y=0)|(x=8&y=0)|(x=0&y=1)|(x=1&y=1)|(x=2&y=1)|(x=3&y=1)|(x=4&y=1)|(x=5&y=1)|(x=6&y=1)|(x=7&y=1)|(x=8&y=1)|(x=2&y=2)|(x=5&y=2)|(x=0&y=3)|(x=1&y=3)|(x=2&y=3)|(x=3&y=3)|(x=5&y=3)|(x=3&y=4)|(x=5&y=4)|(x=6&y=4)|(x=0&y=5)|(x=1&y=5)|(x=2&y=5)|(x=3&y=5)|(x=5&y=5)|(x=6&y=5);

formula right = (x=1&y=0)|(x=2&y=0)|(x=3&y=0)|(x=5&y=0)|(x=6&y=0)|(x=7&y=0)|(x=8&y=0)|(x=9&y=0)|(x=10&y=0)|(x=1&y=1)|(x=3&y=1)|(x=7&y=1)|(x=0&y=2)|(x=1&y=2)|(x=2&y=2)|(x=3&y=2)|(x=4&y=2)|(x=5&y=2)|(x=6&y=2)|(x=7&y=2)|(x=1&y=3)|(x=4&y=3)|(x=0&y=4)|(x=1&y=4)|(x=2&y=4)|(x=4&y=4)|(x=2&y=5)|(x=4&y=5)|(x=5&y=5)|(x=0&y=6)|(x=1&y=6)|(x=2&y=6)|(x=4&y=6)|(x=5&y=6);

formula down = (x=0&y=1)|(x=2&y=1)|(x=3&y=1)|(x=4&y=1)|(x=6&y=1)|(x=7&y=1)|(x=8&y=1)|(x=9&y=1)|(x=10&y=1)|(x=11&y=1)|(x=0&y=2)|(x=2&y=2)|(x=4&y=2)|(x=8&y=2)|(x=0&y=3)|(x=1&y=3)|(x=2&y=3)|(x=3&y=3)|(x=4&y=3)|(x=5&y=3)|(x=6&y=3)|(x=7&y=3)|(x=8&y=3)|(x=2&y=4)|(x=5&y=4)|(x=0&y=5)|(x=1&y=5)|(x=2&y=5)|(x=3&y=5)|(x=5&y=5)|(x=3&y=6)|(x=5&y=6)|(x=6&y=6);

formula left = (x=1&y=0)|(x=3&y=0)|(x=4&y=0)|(x=5&y=0)|(x=7&y=0)|(x=8&y=0)|(x=9&y=0)|(x=10&y=0)|(x=11&y=0)|(x=1&y=1)|(x=3&y=1)|(x=5&y=1)|(x=9&y=1)|(x=1&y=2)|(x=2&y=2)|(x=3&y=2)|(x=4&y=2)|(x=5&y=2)|(x=6&y=2)|(x=7&y=2)|(x=8&y=2)|(x=9&y=2)|(x=3&y=3)|(x=6&y=3)|(x=1&y=4)|(x=2&y=4)|(x=3&y=4)|(x=4&y=4)|(x=6&y=4)|(x=4&y=5)|(x=6&y=5)|(x=7&y=5)|(x=1&y=6)|(x=2&y=6)|(x=3&y=6)|(x=4&y=6)|(x=6&y=6)|(x=7&y=6);

const int x0_init = 0;
const int y0_init = 0;

const int x1_init = 0;
const int y1_init = 6;

formula yu = up ? (y+1) : y;
formula xr = right ? (x+1) : x;
formula yd = down ? (y-1) : y;
formula xl = left ? (x-1) : x;

module maze
         x : [0..11];
         y : [0..6];
        [up0] !sink & up   -> 0.9: (y'=yu) + 0.1: (x'=xr);
        [ri0] !sink & right   -> 0.9: (x'=xr) + 0.1: (y'=yd);
        [do0] !sink & down   -> 0.9: (y'=yd) + 0.1: (x'=xl);
        [le0] !sink & left   -> 0.9: (x'=xl) + 0.1: (y'=yu);
        [up1] !sink & up   -> 0.9: (y'=yu) + 0.1: (x'=xr);
        [ri1] !sink & right   -> 0.9: (x'=xr) + 0.1: (y'=yd);
        [do1] !sink & down   -> 0.9: (y'=yd) + 0.1: (x'=xl);
        [le1] !sink & left   -> 0.9: (x'=xl) + 0.1: (y'=yu);
endmodule

const double discount_factor_up = 0.98;
const double discount_factor_ri = 0.96;
module discounting
        sink : bool;
        [up0] true -> discount_factor_up : true + 1-discount_factor_up : (sink'=true);
        [ri0] true -> discount_factor_ri : true + 1-discount_factor_ri : (sink'=true);
        [do0] true -> discount_factor_up : true + 1-discount_factor_up : (sink'=true);
        [le0] true -> discount_factor_ri : true + 1-discount_factor_ri : (sink'=true);

        [up1] true -> discount_factor_up : true + 1-discount_factor_up : (sink'=true);
        [ri1] true -> discount_factor_ri : true + 1-discount_factor_ri : (sink'=true);
        [do1] true -> discount_factor_up : true + 1-discount_factor_up : (sink'=true);
        [le1] true -> discount_factor_ri : true + 1-discount_factor_ri : (sink'=true);
endmodule

module memory
        memory : [0..1];
        [up0] true -> (memory'=0);
        [up1] true -> (memory'=1);
        [ri0] true -> (memory'=0);
        [ri1] true -> (memory'=1);
        [do0] true -> (memory'=0);
        [do1] true -> (memory'=1);
        [le0] true -> (memory'=0);
        [le1] true -> (memory'=1);
endmodule

init (((x=x0_init & y=y0_init) | (x=x1_init & y=y1_init)) & !sink & memory=0) endinit

formula t0 = (x=3&y=0);
formula t1 = (x=8&y=2);
formula t2 = (x=2&y=3);

label "treasure" = (t0 | t1 | t2);
label "sink" = (sink);
label "start0" = (x=x0_init & y=y0_init);
label "start1" = (x=x1_init & y=y1_init);