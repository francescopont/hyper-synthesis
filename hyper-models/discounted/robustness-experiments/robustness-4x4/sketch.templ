mdp
//  4 | .... .
//  3 |   t  .
//  2 | ........t
//  1 | . . .   .
//  0 | i .t. ......
//    --------------
//      ............

formula up = (x=0&y=0)|(x=2&y=0)|(x=0&y=1)|(x=1&y=1)|(x=2&y=1)|(x=3&y=1)|(x=2&y=2);

formula right = (x=1&y=0)|(x=2&y=0)|(x=1&y=1)|(x=0&y=2)|(x=1&y=2)|(x=2&y=2)|(x=1&y=3);

formula down = (x=0&y=1)|(x=2&y=1)|(x=3&y=1)|(x=0&y=2)|(x=2&y=2)|(x=0&y=3)|(x=1&y=3)|(x=2&y=3)|(x=3&y=3);

formula left = (x=1&y=0)|(x=3&y=0)|(x=1&y=1)|(x=3&y=1)|(x=1&y=2)|(x=2&y=2)|(x=3&y=2)|(x=3&y=3);

const int x0_init = 0;
const int y0_init = 0;

const int x1_init = 0;
const int y1_init = 3;

formula yu = up ? (y+1) : y;
formula xr = right ? (x+1) : x;
formula yd = down ? (y-1) : y;
formula xl = left ? (x-1) : x;

formula t0 = (x=2&y=1);
formula t1 = (x=2&y=2);
formula t = (t0 | t1);

module maze
         x : [0..3];
         y : [0..3];
         fail : bool;
        [up] !sink & !t & up     -> 0.9: (y'=yu) + 0.1: (x'=xr) & (fail'=true);
        [ri] !sink & !t & right  -> 0.9: (x'=xr) + 0.1: (y'=yd) & (fail'=true);
        [do] !sink & !t & down   -> 0.9: (y'=yd) + 0.1: (x'=xl) & (fail'=true);
        [le] !sink & !t & left   -> 0.9: (x'=xl) + 0.1: (y'=yu) & (fail'=true);
endmodule

const double discount_factor = 0.98;
module discounting
        sink : bool;
        [up] true -> discount_factor : true + 1-discount_factor : (sink'=true);
        [ri] true -> discount_factor : true + 1-discount_factor : (sink'=true);
        [do] true -> discount_factor : true + 1-discount_factor : (sink'=true);
        [le] true -> discount_factor : true + 1-discount_factor : (sink'=true);
endmodule

init (((x=x0_init & y=y0_init) | (x=x1_init & y=y1_init)) & !sink & fail=false) endinit

label "treasure" = (t);
label "stop" = (sink);
label "fail" = (fail);

label "start0" = (x=x0_init & y=y0_init);
label "start1" = (x=x1_init & y=y1_init);